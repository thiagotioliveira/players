/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.thiagoti.poc.transfermarkt.players.spec;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Api(value = "Players", description = "the Players API")
public interface PlayersApi {

    /**
     * GET /players : Get by name
     *
     * @param name name of player (required)
     * @param pageNumber number of page (page-size &#x3D; 10) (optional)
     * @return response page with records (status code 200)
     */
    @ApiOperation(value = "Get by name", nickname = "getByName", notes = "", response = Object.class, tags={ "players", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "response page with records", response = Object.class) })
    @GetMapping(
        value = "/players",
        produces = { "application/json" }
    )
    ResponseEntity<Object> getByName(@NotNull @ApiParam(value = "name of player", required = true) @Valid @RequestParam(value = "name", required = true) String name,@ApiParam(value = "number of page (page-size = 10)") @Valid @RequestParam(value = "pageNumber", required = false) Integer pageNumber);

}
